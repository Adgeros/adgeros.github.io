{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/black-blue/source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/css/loading-style.css","path":"css/loading-style.css","modified":1,"renderable":1},{"_id":"themes/black-blue/source/css/showshare.css","path":"css/showshare.css","modified":1,"renderable":1},{"_id":"themes/black-blue/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/black-blue/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/black-blue/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/black-blue/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/black-blue/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/black-blue/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/black-blue/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/coderwall.png","path":"img/coderwall.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/delicious.png","path":"img/delicious.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/douban.png","path":"img/douban.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/facebook.png","path":"img/facebook.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/github.png","path":"img/github.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/google.png","path":"img/google.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/img-err.png","path":"img/img-err.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/img-loading.png","path":"img/img-loading.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/linkedin.png","path":"img/linkedin.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/mail.png","path":"img/mail.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/pinboard.png","path":"img/pinboard.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/pinterest.png","path":"img/pinterest.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/qq.png","path":"img/qq.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/rss.png","path":"img/rss.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/twitter.png","path":"img/twitter.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/wechat.png","path":"img/wechat.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/weibo.png","path":"img/weibo.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/zhihu.png","path":"img/zhihu.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/js/TweenMax.js","path":"js/TweenMax.js","modified":1,"renderable":1},{"_id":"themes/black-blue/source/js/clipboard.min.js","path":"js/clipboard.min.js","modified":1,"renderable":1},{"_id":"themes/black-blue/source/js/instagram.js","path":"js/instagram.js","modified":1,"renderable":1},{"_id":"themes/black-blue/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/black-blue/source/js/embed.js","path":"js/embed.js","modified":1,"renderable":1},{"_id":"themes/black-blue/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/black-blue/source/js/mobile.js","path":"js/mobile.js","modified":1,"renderable":1},{"_id":"themes/black-blue/source/js/pace.js","path":"js/pace.js","modified":1,"renderable":1},{"_id":"themes/black-blue/source/js/pc.js","path":"js/pc.js","modified":1,"renderable":1},{"_id":"themes/black-blue/source/js/plugins.js","path":"js/plugins.js","modified":1,"renderable":1},{"_id":"themes/black-blue/source/js/TweenMax.min.js","path":"js/TweenMax.min.js","modified":1,"renderable":1},{"_id":"themes/black-blue/source/background/bg-1.jpg","path":"background/bg-1.jpg","modified":1,"renderable":1},{"_id":"themes/black-blue/source/css/pace/pace-theme-flash.css","path":"css/pace/pace-theme-flash.css","modified":1,"renderable":1},{"_id":"themes/black-blue/source/background/bg.jpg","path":"background/bg.jpg","modified":1,"renderable":1},{"_id":"themes/black-blue/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/black-blue/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/black-blue/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/black-blue/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/black-blue/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/black-blue/source/font-awesome/css/font-awesome.css","path":"font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/black-blue/source/js/404/jquery.parallaxify-0.0.2.min.js","path":"js/404/jquery.parallaxify-0.0.2.min.js","modified":1,"renderable":1},{"_id":"themes/black-blue/source/font-awesome/css/font-awesome.min.css","path":"font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/black-blue/source/font-awesome/fonts/FontAwesome.otf","path":"font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/black-blue/source/font-awesome/fonts/fontawesome-webfont.eot","path":"font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/black-blue/source/font-awesome/fonts/fontawesome-webfont.woff2","path":"font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/black-blue/source/font-awesome/fonts/fontawesome-webfont.woff","path":"font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"themes/black-blue/source/js/404/jquery-2.0.3.min.js","path":"js/404/jquery-2.0.3.min.js","modified":1,"renderable":1},{"_id":"themes/black-blue/source/font-awesome/fonts/fontawesome-webfont.ttf","path":"font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/black-blue/source/img/bg.jpg","path":"img/bg.jpg","modified":1,"renderable":1},{"_id":"themes/black-blue/source/font-awesome/fonts/fontawesome-webfont.svg","path":"font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"4047d27cfd29d8e090fff99655972dce591c7e17","modified":1501639855000},{"_id":"themes/black-blue/.gitignore","hash":"0b09eddca98f48b62fe045db35c0166571d71dcb","modified":1510023252000},{"_id":"themes/black-blue/README.md","hash":"37827cf67b0a79269bf9d6c5314b236eb2f7d9ff","modified":1510023252000},{"_id":"themes/black-blue/_config.yml","hash":"68f84da182056a7fe71bbb8f01ed042940864a1a","modified":1510023664000},{"_id":"themes/black-blue/package.json","hash":"ec3f79ea003611c88754ac1c016f825e94655ffe","modified":1510023252000},{"_id":"source/_posts/CentOS7安装和配置vsftpd.md","hash":"00ffca3d0cd1da9ea1a70dd2e608c5cb530418c0","modified":1503374341000},{"_id":"source/_posts/GIT协同开发.md","hash":"9864c7b263bb174e975ac78a4aed49972c50ffd6","modified":1503374116000},{"_id":"source/_posts/特殊的5天.md","hash":"0270a4de84d4a840c7558930c5bdfd0307a77aa0","modified":1503655458000},{"_id":"source/about/index.md","hash":"b95c045ebadd9c5118316dafbaa29776a198e5b4","modified":1501638207000},{"_id":"source/contact/index.md","hash":"3bb3a8f5ff7010c77bcb7d4108b78707047582c4","modified":1501638207000},{"_id":"source/tags/index.md","hash":"77b20e8cf820d1e6eb07e6a88e1159e857863fad","modified":1501640399000},{"_id":"themes/black-blue/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1510023252000},{"_id":"themes/black-blue/.git/config","hash":"9602e96bbbc6e8fa4a791670b1debe46bad11958","modified":1510023252000},{"_id":"themes/black-blue/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1510023243000},{"_id":"themes/black-blue/.git/index","hash":"3e4b2e3f529567506d9ffa5c969925e392a2c292","modified":1510023252000},{"_id":"themes/black-blue/.git/packed-refs","hash":"02874734ad006604c949199ee066db5fdd56a93f","modified":1510023252000},{"_id":"themes/black-blue/languages/de.yml","hash":"ecb13af8af81ccc033ae7494cb2f94f84f6466ad","modified":1510023252000},{"_id":"themes/black-blue/languages/default.yml","hash":"9e59cd11b290be84909612beb12d0f93ce737f53","modified":1510023252000},{"_id":"themes/black-blue/languages/en.yml","hash":"8fa0a7482188ca56fd3cf19c4a87320f85a76846","modified":1510023252000},{"_id":"themes/black-blue/languages/fr-FR.yml","hash":"12cfa96dc412ecb6f8bf4de2690575929464906e","modified":1510023252000},{"_id":"themes/black-blue/languages/ru.yml","hash":"9997425292031ee8a58a93346ac6d3f38f18e566","modified":1510023252000},{"_id":"themes/black-blue/languages/zh-Hans.yml","hash":"0d7e8da60fd5e5db217e1733ac273ae00fd752ea","modified":1510023252000},{"_id":"themes/black-blue/languages/zh-hk.yml","hash":"606dfb34d3fec1d7895a654ff7a5a1de0c6a5c55","modified":1510023252000},{"_id":"themes/black-blue/languages/zh-tw.yml","hash":"9e4034870b57d2bb3063c91f8d206a6c4d7b3789","modified":1510023252000},{"_id":"themes/black-blue/languages/zh.yml","hash":"0d7e8da60fd5e5db217e1733ac273ae00fd752ea","modified":1510023252000},{"_id":"themes/black-blue/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1510023252000},{"_id":"themes/black-blue/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1510023252000},{"_id":"themes/black-blue/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1510023252000},{"_id":"themes/black-blue/layout/layout.ejs","hash":"4a5566f704f3246f5ef77badddf18d2e16750328","modified":1510023252000},{"_id":"themes/black-blue/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1510023252000},{"_id":"themes/black-blue/layout/plugins.swig","hash":"5149cff242dce852096de17122f3d1da8ad73086","modified":1510023252000},{"_id":"themes/black-blue/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1510023252000},{"_id":"themes/black-blue/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1510023252000},{"_id":"themes/black-blue/source/apple-touch-icon.png","hash":"c36a373c7830d61d1ce092bd5a88d0e9b54212fd","modified":1510023252000},{"_id":"themes/black-blue/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1510023243000},{"_id":"themes/black-blue/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1510023243000},{"_id":"themes/black-blue/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1510023243000},{"_id":"themes/black-blue/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1510023243000},{"_id":"themes/black-blue/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1510023243000},{"_id":"themes/black-blue/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1510023243000},{"_id":"themes/black-blue/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1510023243000},{"_id":"themes/black-blue/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1510023243000},{"_id":"themes/black-blue/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1510023243000},{"_id":"themes/black-blue/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1510023243000},{"_id":"themes/black-blue/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1510023243000},{"_id":"themes/black-blue/.git/logs/HEAD","hash":"2bdce347219749eb7687f43f88cdb71d3e7f83f4","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/after-footer.ejs","hash":"d55406fffe0578fe3f7cbcab008238ec37f1f127","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/archive-post.ejs","hash":"8af583c5f60c69ffdc97bee4e8fdac1ba34ebecd","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/archive.ejs","hash":"7023e8239b1a9c57c4bf787b688c7f0fde437d8b","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/article.ejs","hash":"f9552fab6c4864f88a75c85c0fa389e489397e27","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/background.ejs","hash":"e566c3804a25e4c76f025db511dbaa0d008757e2","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/bodybackground.ejs","hash":"931700a928b84577cc33dfff68a009188885f6c0","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/case.swig","hash":"571f96fee07071d81ed65b2c8fda8f922ad784b7","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/footer.ejs","hash":"207e52eb895f027b430c6dd7d00b34f0eebf4ac9","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/head.ejs","hash":"2f98d8d94df55799860af7cef82c44654b4b4cbf","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/hide-labels.ejs","hash":"ec77ea7c3bac6e5cf0781f05dcf771f6c4e0c128","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/left-col.ejs","hash":"66b7edc6c5386a6a9c2b392b31227c931585dae8","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/mathjax.ejs","hash":"54fab4d3d64cb937d6baec7324ffabf9f202b883","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/mobile-nav.ejs","hash":"1ddd03edfb88867eff99bc0060466ea7cca3825c","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/page.ejs","hash":"9c77673bb9eac449d755244a6dc18fa62ce92dd5","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/plugin.swig","hash":"17b6c6945e4b1b41dbb10d851f85ca10100c28ea","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/post-nav-button.ejs","hash":"4a09765a7ef5e8640c2f305bb03fc79cfb4e4f0c","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/scrolling-button.ejs","hash":"b3a28974f37375796687e6100b48c3da6f662640","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/theme.swig","hash":"5a279ad8f6c6b7c104cce495faa563d8b7a7c74a","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/toc.ejs","hash":"bbf94c18c99df0c890c507adee53e251cf60d827","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/work.swig","hash":"ff66786482448c74924ca8288d3822ec0a4412c9","modified":1510023252000},{"_id":"themes/black-blue/source/css/loading-style.css","hash":"6535ef9a22f9791c87033fd914938473952831aa","modified":1510023252000},{"_id":"themes/black-blue/source/css/showshare.css","hash":"32ac128451bec3cefcf322d4b3e9a294b0c0e57d","modified":1510023252000},{"_id":"themes/black-blue/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1510023252000},{"_id":"themes/black-blue/source/css/style.css","hash":"8475de23548e6ee81bba73f4fb3ecde5b4028b09","modified":1510023252000},{"_id":"themes/black-blue/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1510023252000},{"_id":"themes/black-blue/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1510023252000},{"_id":"themes/black-blue/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1510023252000},{"_id":"themes/black-blue/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1510023252000},{"_id":"themes/black-blue/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1510023252000},{"_id":"themes/black-blue/source/fancybox/jquery.fancybox.css","hash":"89aa9b06961a0c8fa0aa6e4cea9a95e7f6d4d5a1","modified":1510023252000},{"_id":"themes/black-blue/source/fancybox/jquery.fancybox.js","hash":"422bd03dda3be683717d7cf940eead7a072fe12e","modified":1510023252000},{"_id":"themes/black-blue/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1510023252000},{"_id":"themes/black-blue/source/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1510023252000},{"_id":"themes/black-blue/source/img/delicious.png","hash":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1510023252000},{"_id":"themes/black-blue/source/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1510023252000},{"_id":"themes/black-blue/source/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1510023252000},{"_id":"themes/black-blue/source/img/favicon.png","hash":"5b4e9c94ff3396db5b074b69c1aa5bb909aba825","modified":1510023252000},{"_id":"themes/black-blue/source/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1510023252000},{"_id":"themes/black-blue/source/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1510023252000},{"_id":"themes/black-blue/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1510023252000},{"_id":"themes/black-blue/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1510023252000},{"_id":"themes/black-blue/source/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1510023252000},{"_id":"themes/black-blue/source/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1510023252000},{"_id":"themes/black-blue/source/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1510023252000},{"_id":"themes/black-blue/source/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1510023252000},{"_id":"themes/black-blue/source/img/qq.png","hash":"fd741764c5528fe371f053beac99839a97900eef","modified":1510023252000},{"_id":"themes/black-blue/source/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1510023252000},{"_id":"themes/black-blue/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1510023252000},{"_id":"themes/black-blue/source/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1510023252000},{"_id":"themes/black-blue/source/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1510023252000},{"_id":"themes/black-blue/source/img/wechat.png","hash":"7ca41b6e32ca4dac419225261ab4fee5a88f73a9","modified":1510023252000},{"_id":"themes/black-blue/source/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1510023252000},{"_id":"themes/black-blue/source/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1510023252000},{"_id":"themes/black-blue/source/js/TweenMax.js","hash":"4ac5bb002414aa0dbbb57c867845fa057a9c5453","modified":1510023252000},{"_id":"themes/black-blue/source/js/clipboard.min.js","hash":"7f047155fccd6f375db17d6d44e1f4637feb3b04","modified":1510023252000},{"_id":"themes/black-blue/source/js/instagram.js","hash":"35d037fed53f5d3b6ece63b1b98ba3b2f9ccbf78","modified":1510023252000},{"_id":"themes/black-blue/source/js/jquery.lazyload.js","hash":"6f4a6850315cabbab8908473fe04f8bd2011299b","modified":1510023252000},{"_id":"themes/black-blue/source/js/embed.js","hash":"78cb9cbc04c32268df2663370f1daab6a2b0a9aa","modified":1510023252000},{"_id":"themes/black-blue/source/js/main.js","hash":"f6226d5a27cb556dccc8d2ed85b1b228675a119f","modified":1510023252000},{"_id":"themes/black-blue/source/js/mobile.js","hash":"ebb80e3e6da9146f05ba0528a378c583b47e37c1","modified":1510023252000},{"_id":"themes/black-blue/source/js/pace.js","hash":"aadc3b4644ac1b1a7849991ffd53e220b55ff6e5","modified":1510023252000},{"_id":"themes/black-blue/source/js/pc.js","hash":"46db69363993695b6714a04e503624ad054da19e","modified":1510023252000},{"_id":"themes/black-blue/source/js/plugins.js","hash":"72b87cbf6170f6cbb69bc9b20a7bc494667b514c","modified":1510023252000},{"_id":"themes/black-blue/source/js/TweenMax.min.js","hash":"eaa4e4a08400da3f22dedda706ba56cdce5b0b7a","modified":1510023252000},{"_id":"themes/black-blue/.git/objects/pack/pack-6072b0411625b8ce4c44ffb052adbe0aa2e0810d.idx","hash":"ab21d0dcbeab9b15106be2053f04ce1fe11cb0ba","modified":1510023252000},{"_id":"themes/black-blue/.git/refs/heads/master","hash":"9d5f1740388b30be57b31768c8d65f725a5b3dd5","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/analytics/baidu-analytics.ejs","hash":"b9467d24b276df225786923861f4cfecf700ca75","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/analytics/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/comments/changyan.ejs","hash":"85239a27de547854dcbff38feac9bb5a92a2184c","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/comments/disqus.ejs","hash":"013e4e8f07af29715ac8d6f66aad6a575be2f70a","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/post/TipTitle.ejs","hash":"201de1bafd12c8641bc6ccdfff116002550f923c","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/post/category.ejs","hash":"265bb12f7cfa5e0bcbb74fdd409ba13a6d9d2e22","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/post/date.ejs","hash":"41162e173f3c9339cfaf0cc12ebd8d27631540d7","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/post/loading.ejs","hash":"52a576a8afee08d33c6f69a61c496e1820132e91","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/post/nav.ejs","hash":"ec5289ec24ae1f51c149b9a502d1c80baff0d411","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/post/tag.ejs","hash":"9dad471e27de9e066666f3082137eccaede2e67b","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/post/title.ejs","hash":"7d20bf6335493155f91b3e1c782ba150856d9370","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/share/baidu-share.ejs","hash":"21fbd6dbdcc631c61194ea04fc19b298133b0e2f","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/share/share.ejs","hash":"62467610ba6df9b63350d163e806be774dcf5a00","modified":1510023252000},{"_id":"themes/black-blue/layout/_partial/share/showshare.ejs","hash":"410b809eb6c50bacfd9e1e573f1e0251841bc79d","modified":1510023252000},{"_id":"themes/black-blue/source/background/bg-1.jpg","hash":"9d428ac435198b2a0107102a2e9ae71e53afe364","modified":1510023252000},{"_id":"themes/black-blue/source/css/pace/pace-theme-flash.css","hash":"9b9c20fd0624745cc20d7028b54c8b8301d81629","modified":1510023252000},{"_id":"themes/black-blue/source/background/bg.jpg","hash":"d69a0447e91f62977b144737f08620d77037c76a","modified":1510023252000},{"_id":"themes/black-blue/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1510023252000},{"_id":"themes/black-blue/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1510023252000},{"_id":"themes/black-blue/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1510023252000},{"_id":"themes/black-blue/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1510023252000},{"_id":"themes/black-blue/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1510023252000},{"_id":"themes/black-blue/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1510023252000},{"_id":"themes/black-blue/source/font-awesome/css/font-awesome.css","hash":"b488600451227b445414796e9b8550e7c1bd6d29","modified":1510023252000},{"_id":"themes/black-blue/source/js/404/jquery.parallaxify-0.0.2.min.js","hash":"b97e2dfcb210b76f7bdd6e1800b26128bf4fad99","modified":1510023252000},{"_id":"themes/black-blue/source/font-awesome/css/font-awesome.min.css","hash":"12d6861075de8e293265ff6ff03b1f3adcb44c76","modified":1510023252000},{"_id":"themes/black-blue/source/font-awesome/fonts/FontAwesome.otf","hash":"42c179eef588854b5ec151bcf6a3f58aa8b79b11","modified":1510023252000},{"_id":"themes/black-blue/source/font-awesome/fonts/fontawesome-webfont.eot","hash":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1510023252000},{"_id":"themes/black-blue/source/font-awesome/fonts/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1510023252000},{"_id":"themes/black-blue/source/font-awesome/fonts/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1510023252000},{"_id":"themes/black-blue/source/img/avatar.png","hash":"31f8c6a64a3ccaa454d41fc4eb074aeb94e6cbde","modified":1510023252000},{"_id":"themes/black-blue/source/js/404/jquery-2.0.3.min.js","hash":"fbf9c77d0c4e3c34a485980c1e5316b6212160c8","modified":1510023252000},{"_id":"themes/black-blue/.git/logs/refs/heads/master","hash":"2bdce347219749eb7687f43f88cdb71d3e7f83f4","modified":1510023252000},{"_id":"themes/black-blue/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1510023252000},{"_id":"themes/black-blue/source/font-awesome/fonts/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1510023252000},{"_id":"themes/black-blue/.git/logs/refs/remotes/origin/HEAD","hash":"2bdce347219749eb7687f43f88cdb71d3e7f83f4","modified":1510023252000},{"_id":"themes/black-blue/source/img/bg.jpg","hash":"1bcba3c6348e2190a42bff762800bf846cf9239c","modified":1510023252000},{"_id":"themes/black-blue/source/font-awesome/fonts/fontawesome-webfont.svg","hash":"b06b5c8f67fd632cdc62a33b62ae4f74194131b3","modified":1510023252000},{"_id":"themes/black-blue/.git/objects/pack/pack-6072b0411625b8ce4c44ffb052adbe0aa2e0810d.pack","hash":"b9adfe29256e4b9432f7d9ab27ded56ec0c13680","modified":1510023252000}],"Category":[],"Data":[],"Page":[{"title":"关于","date":"2017-02-24T02:56:02.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2017-02-24 10:56:02\n---\n","updated":"2017-08-02T01:43:27.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj9p1buhd0001not0dy1z982p","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"联系我","date":"2017-02-24T02:57:38.000Z","_content":"","source":"contact/index.md","raw":"---\ntitle: 联系我\ndate: 2017-02-24 10:57:38\n---\n","updated":"2017-08-02T01:43:27.000Z","path":"contact/index.html","comments":1,"layout":"page","_id":"cj9p1buhf0003not0vrnuaiqn","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2017-08-02T02:19:59.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-08-02 10:19:59\n---\n","updated":"2017-08-02T02:19:59.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cj9p1bui2000bnot0oiig84hx","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"CentOS7安装和配置vsftpd","date":"2017-07-22T03:46:07.000Z","description":"本文是环境是阿里云CentOS7.2 64位下进行的，全部命令行搞定","_content":"\n## 安装vsftpd\n``` bash\n#安装vsftpd\n$ yum install -y vsftpd\n#设置开机启动\n$ systemctl enable vsftpd.service \n# 重启\n$ service vsftpd restart\n# 查看vsftpd服务的状态\n$ systemctl status vsftpd.service\n```\n### 配置vsftpd.conf\n\n``` bash\n#备份配置文件 \n$ cp /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.bak\n\n#执行以下命令\n$ sed -i \"s/anonymous_enable=YES/anonymous_enable=NO/g\" '/etc/vsftpd/vsftpd.conf'\n\n$ sed -i \"s/#anon_upload_enable=YES/anon_upload_enable=NO/g\" '/etc/vsftpd/vsftpd.conf'\n\n$ sed -i \"s/#anon_mkdir_write_enable=YES/anon_mkdir_write_enable=YES/g\" '/etc/vsftpd/vsftpd.conf'\n\n$ sed -i \"s/#chown_uploads=YES/chown_uploads=NO/g\" '/etc/vsftpd/vsftpd.conf'\n\n$ sed -i \"s/#async_abor_enable=YES/async_abor_enable=YES/g\" '/etc/vsftpd/vsftpd.conf'\n\n$ sed -i \"s/#ascii_upload_enable=YES/ascii_upload_enable=YES/g\" '/etc/vsftpd/vsftpd.conf'\n\n$ sed -i \"s/#ascii_download_enable=YES/ascii_download_enable=YES/g\" '/etc/vsftpd/vsftpd.conf'\n\n$ sed -i \"s/#ftpd_banner=Welcome to blah FTP service./ftpd_banner=Welcome to FTP service./g\" '/etc/vsftpd/vsftpd.conf'\n\n#添加下列内容到vsftpd.conf末尾（原本有几个配置的最下面）\nuse_localtime=YES\nlisten_port=21\nchroot_local_user=YES\nidle_session_timeout=300\nguest_enable=YES\nguest_username=vsftpd\nuser_config_dir=/etc/vsftpd/vconf\ndata_connection_timeout=1\nvirtual_use_local_privs=YES\npasv_min_port=10060\npasv_max_port=10090\naccept_timeout=5\nconnect_timeout=1\n```\n\n### 建立用户文件\n\n``` bash\n#第一行用户名，第二行密码，不能使用root为用户名\n$ vi /etc/vsftpd/virtusers\nadger\n123456\n```\n\n### 生成用户数据文件\n\n``` bash\n$ db_load -T -t hash -f /etc/vsftpd/virtusers /etc/vsftpd/virtusers.db\n#设定PAM验证文件，并指定对虚拟用户数据库文件进行读取\n$ chmod 600 /etc/vsftpd/virtusers.db \n```\n\n### 修改/etc/pam.d/vsftpd文件\n\n``` bash\n# 修改前先备份 \n\n$ cp /etc/pam.d/vsftpd /etc/pam.d/vsftpd.bak\n\n# 将auth及account的所有配置行均注释掉\n$ vi /etc/pam.d/vsftpd\n\nauth sufficient /lib64/security/pam_userdb.so db=/etc/vsftpd/virtusers\n\naccount sufficient /lib64/security/pam_userdb.so db=/etc/vsftpd/virtusers\n\n# 如果系统为32位，上面改为lib\n```\n\n### 新建系统用户vsftpd，用户目录为/home/vsftpd\n``` bash\n#用户登录终端设为/bin/false(即：使之不能登录系统)\n$ useradd vsftpd -d /home/vsftpd -s /bin/false\n$ chown -R vsftpd:vsftpd /home/vsftpd\n```\n\n### 建立虚拟用户个人配置文件\n``` bash\n$ mkdir /etc/vsftpd/vconf\n$ cd /etc/vsftpd/vconf\n\n#这里建立两个虚拟用户配合文件\n$ touch adger\n\n#建立用户根目录\n$ mkdir -p /home/vsftpd/adger/\n\n#编辑chris用户配置文件，内容如下，其他用户类似\n$ vi adger\n\n# adger目录不允许可写，不然无法连接ftp\nlocal_root=/home/vsftpd/adger/\nwrite_enable=YES\nanon_world_readable_only=NO\nanon_upload_enable=YES\nanon_mkdir_write_enable=YES\nanon_other_write_enable=YES\n```\n\n### 设置目录权限\n``` bash\n# chroot_local_user 属性以后,必须保证ftp根目录不可写,这样对于ftp根直接为网站根目录的用户不方便,所以建议假如ftp根目录是/home/${adger},则将访问权限改写如下\n$ chmod a-w /home/adger\n# 新建上传文件夹\n$ mkdir /home/vsftpd/adger/resource\n$ chmod -R 777 /home/vsftpd/adger/resource\n```\n\n### 防火墙设置\n``` bash\n$ vi /etc/sysconfig/iptables\n#编辑iptables文件，添加如下内容，开启21端口\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 21 -j ACCEPT\n```\n\n### 重启vsftpd服务器\n``` bash\n$ service vsftpd restart\n```\n\n### 客户端连接\n\n","source":"_posts/CentOS7安装和配置vsftpd.md","raw":"---\ntitle: CentOS7安装和配置vsftpd\ndate: 2017-07-22 11:46:07\ntags: Linux\ndescription: 本文是环境是阿里云CentOS7.2 64位下进行的，全部命令行搞定\n---\n\n## 安装vsftpd\n``` bash\n#安装vsftpd\n$ yum install -y vsftpd\n#设置开机启动\n$ systemctl enable vsftpd.service \n# 重启\n$ service vsftpd restart\n# 查看vsftpd服务的状态\n$ systemctl status vsftpd.service\n```\n### 配置vsftpd.conf\n\n``` bash\n#备份配置文件 \n$ cp /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.bak\n\n#执行以下命令\n$ sed -i \"s/anonymous_enable=YES/anonymous_enable=NO/g\" '/etc/vsftpd/vsftpd.conf'\n\n$ sed -i \"s/#anon_upload_enable=YES/anon_upload_enable=NO/g\" '/etc/vsftpd/vsftpd.conf'\n\n$ sed -i \"s/#anon_mkdir_write_enable=YES/anon_mkdir_write_enable=YES/g\" '/etc/vsftpd/vsftpd.conf'\n\n$ sed -i \"s/#chown_uploads=YES/chown_uploads=NO/g\" '/etc/vsftpd/vsftpd.conf'\n\n$ sed -i \"s/#async_abor_enable=YES/async_abor_enable=YES/g\" '/etc/vsftpd/vsftpd.conf'\n\n$ sed -i \"s/#ascii_upload_enable=YES/ascii_upload_enable=YES/g\" '/etc/vsftpd/vsftpd.conf'\n\n$ sed -i \"s/#ascii_download_enable=YES/ascii_download_enable=YES/g\" '/etc/vsftpd/vsftpd.conf'\n\n$ sed -i \"s/#ftpd_banner=Welcome to blah FTP service./ftpd_banner=Welcome to FTP service./g\" '/etc/vsftpd/vsftpd.conf'\n\n#添加下列内容到vsftpd.conf末尾（原本有几个配置的最下面）\nuse_localtime=YES\nlisten_port=21\nchroot_local_user=YES\nidle_session_timeout=300\nguest_enable=YES\nguest_username=vsftpd\nuser_config_dir=/etc/vsftpd/vconf\ndata_connection_timeout=1\nvirtual_use_local_privs=YES\npasv_min_port=10060\npasv_max_port=10090\naccept_timeout=5\nconnect_timeout=1\n```\n\n### 建立用户文件\n\n``` bash\n#第一行用户名，第二行密码，不能使用root为用户名\n$ vi /etc/vsftpd/virtusers\nadger\n123456\n```\n\n### 生成用户数据文件\n\n``` bash\n$ db_load -T -t hash -f /etc/vsftpd/virtusers /etc/vsftpd/virtusers.db\n#设定PAM验证文件，并指定对虚拟用户数据库文件进行读取\n$ chmod 600 /etc/vsftpd/virtusers.db \n```\n\n### 修改/etc/pam.d/vsftpd文件\n\n``` bash\n# 修改前先备份 \n\n$ cp /etc/pam.d/vsftpd /etc/pam.d/vsftpd.bak\n\n# 将auth及account的所有配置行均注释掉\n$ vi /etc/pam.d/vsftpd\n\nauth sufficient /lib64/security/pam_userdb.so db=/etc/vsftpd/virtusers\n\naccount sufficient /lib64/security/pam_userdb.so db=/etc/vsftpd/virtusers\n\n# 如果系统为32位，上面改为lib\n```\n\n### 新建系统用户vsftpd，用户目录为/home/vsftpd\n``` bash\n#用户登录终端设为/bin/false(即：使之不能登录系统)\n$ useradd vsftpd -d /home/vsftpd -s /bin/false\n$ chown -R vsftpd:vsftpd /home/vsftpd\n```\n\n### 建立虚拟用户个人配置文件\n``` bash\n$ mkdir /etc/vsftpd/vconf\n$ cd /etc/vsftpd/vconf\n\n#这里建立两个虚拟用户配合文件\n$ touch adger\n\n#建立用户根目录\n$ mkdir -p /home/vsftpd/adger/\n\n#编辑chris用户配置文件，内容如下，其他用户类似\n$ vi adger\n\n# adger目录不允许可写，不然无法连接ftp\nlocal_root=/home/vsftpd/adger/\nwrite_enable=YES\nanon_world_readable_only=NO\nanon_upload_enable=YES\nanon_mkdir_write_enable=YES\nanon_other_write_enable=YES\n```\n\n### 设置目录权限\n``` bash\n# chroot_local_user 属性以后,必须保证ftp根目录不可写,这样对于ftp根直接为网站根目录的用户不方便,所以建议假如ftp根目录是/home/${adger},则将访问权限改写如下\n$ chmod a-w /home/adger\n# 新建上传文件夹\n$ mkdir /home/vsftpd/adger/resource\n$ chmod -R 777 /home/vsftpd/adger/resource\n```\n\n### 防火墙设置\n``` bash\n$ vi /etc/sysconfig/iptables\n#编辑iptables文件，添加如下内容，开启21端口\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 21 -j ACCEPT\n```\n\n### 重启vsftpd服务器\n``` bash\n$ service vsftpd restart\n```\n\n### 客户端连接\n\n","slug":"CentOS7安装和配置vsftpd","published":1,"updated":"2017-08-22T03:59:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9p1buha0000not0a8ztcrxy","content":"<h2 id=\"安装vsftpd\"><a href=\"#安装vsftpd\" class=\"headerlink\" title=\"安装vsftpd\"></a>安装vsftpd</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#安装vsftpd</span></div><div class=\"line\">$ yum install -y vsftpd</div><div class=\"line\"><span class=\"comment\">#设置开机启动</span></div><div class=\"line\">$ systemctl <span class=\"built_in\">enable</span> vsftpd.service </div><div class=\"line\"><span class=\"comment\"># 重启</span></div><div class=\"line\">$ service vsftpd restart</div><div class=\"line\"><span class=\"comment\"># 查看vsftpd服务的状态</span></div><div class=\"line\">$ systemctl status vsftpd.service</div></pre></td></tr></table></figure>\n<h3 id=\"配置vsftpd-conf\"><a href=\"#配置vsftpd-conf\" class=\"headerlink\" title=\"配置vsftpd.conf\"></a>配置vsftpd.conf</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#备份配置文件 </span></div><div class=\"line\">$ cp /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.bak</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#执行以下命令</span></div><div class=\"line\">$ sed -i <span class=\"string\">\"s/anonymous_enable=YES/anonymous_enable=NO/g\"</span> <span class=\"string\">'/etc/vsftpd/vsftpd.conf'</span></div><div class=\"line\"></div><div class=\"line\">$ sed -i <span class=\"string\">\"s/#anon_upload_enable=YES/anon_upload_enable=NO/g\"</span> <span class=\"string\">'/etc/vsftpd/vsftpd.conf'</span></div><div class=\"line\"></div><div class=\"line\">$ sed -i <span class=\"string\">\"s/#anon_mkdir_write_enable=YES/anon_mkdir_write_enable=YES/g\"</span> <span class=\"string\">'/etc/vsftpd/vsftpd.conf'</span></div><div class=\"line\"></div><div class=\"line\">$ sed -i <span class=\"string\">\"s/#chown_uploads=YES/chown_uploads=NO/g\"</span> <span class=\"string\">'/etc/vsftpd/vsftpd.conf'</span></div><div class=\"line\"></div><div class=\"line\">$ sed -i <span class=\"string\">\"s/#async_abor_enable=YES/async_abor_enable=YES/g\"</span> <span class=\"string\">'/etc/vsftpd/vsftpd.conf'</span></div><div class=\"line\"></div><div class=\"line\">$ sed -i <span class=\"string\">\"s/#ascii_upload_enable=YES/ascii_upload_enable=YES/g\"</span> <span class=\"string\">'/etc/vsftpd/vsftpd.conf'</span></div><div class=\"line\"></div><div class=\"line\">$ sed -i <span class=\"string\">\"s/#ascii_download_enable=YES/ascii_download_enable=YES/g\"</span> <span class=\"string\">'/etc/vsftpd/vsftpd.conf'</span></div><div class=\"line\"></div><div class=\"line\">$ sed -i <span class=\"string\">\"s/#ftpd_banner=Welcome to blah FTP service./ftpd_banner=Welcome to FTP service./g\"</span> <span class=\"string\">'/etc/vsftpd/vsftpd.conf'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#添加下列内容到vsftpd.conf末尾（原本有几个配置的最下面）</span></div><div class=\"line\">use_localtime=YES</div><div class=\"line\">listen_port=21</div><div class=\"line\">chroot_local_user=YES</div><div class=\"line\">idle_session_timeout=300</div><div class=\"line\">guest_enable=YES</div><div class=\"line\">guest_username=vsftpd</div><div class=\"line\">user_config_dir=/etc/vsftpd/vconf</div><div class=\"line\">data_connection_timeout=1</div><div class=\"line\">virtual_use_local_privs=YES</div><div class=\"line\">pasv_min_port=10060</div><div class=\"line\">pasv_max_port=10090</div><div class=\"line\">accept_timeout=5</div><div class=\"line\">connect_timeout=1</div></pre></td></tr></table></figure>\n<h3 id=\"建立用户文件\"><a href=\"#建立用户文件\" class=\"headerlink\" title=\"建立用户文件\"></a>建立用户文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#第一行用户名，第二行密码，不能使用root为用户名</span></div><div class=\"line\">$ vi /etc/vsftpd/virtusers</div><div class=\"line\">adger</div><div class=\"line\">123456</div></pre></td></tr></table></figure>\n<h3 id=\"生成用户数据文件\"><a href=\"#生成用户数据文件\" class=\"headerlink\" title=\"生成用户数据文件\"></a>生成用户数据文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ db_load -T -t <span class=\"built_in\">hash</span> -f /etc/vsftpd/virtusers /etc/vsftpd/virtusers.db</div><div class=\"line\"><span class=\"comment\">#设定PAM验证文件，并指定对虚拟用户数据库文件进行读取</span></div><div class=\"line\">$ chmod 600 /etc/vsftpd/virtusers.db</div></pre></td></tr></table></figure>\n<h3 id=\"修改-etc-pam-d-vsftpd文件\"><a href=\"#修改-etc-pam-d-vsftpd文件\" class=\"headerlink\" title=\"修改/etc/pam.d/vsftpd文件\"></a>修改/etc/pam.d/vsftpd文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 修改前先备份 </span></div><div class=\"line\"></div><div class=\"line\">$ cp /etc/pam.d/vsftpd /etc/pam.d/vsftpd.bak</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 将auth及account的所有配置行均注释掉</span></div><div class=\"line\">$ vi /etc/pam.d/vsftpd</div><div class=\"line\"></div><div class=\"line\">auth sufficient /lib64/security/pam_userdb.so db=/etc/vsftpd/virtusers</div><div class=\"line\"></div><div class=\"line\">account sufficient /lib64/security/pam_userdb.so db=/etc/vsftpd/virtusers</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 如果系统为32位，上面改为lib</span></div></pre></td></tr></table></figure>\n<h3 id=\"新建系统用户vsftpd，用户目录为-home-vsftpd\"><a href=\"#新建系统用户vsftpd，用户目录为-home-vsftpd\" class=\"headerlink\" title=\"新建系统用户vsftpd，用户目录为/home/vsftpd\"></a>新建系统用户vsftpd，用户目录为/home/vsftpd</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#用户登录终端设为/bin/false(即：使之不能登录系统)</span></div><div class=\"line\">$ useradd vsftpd -d /home/vsftpd -s /bin/<span class=\"literal\">false</span></div><div class=\"line\">$ chown -R vsftpd:vsftpd /home/vsftpd</div></pre></td></tr></table></figure>\n<h3 id=\"建立虚拟用户个人配置文件\"><a href=\"#建立虚拟用户个人配置文件\" class=\"headerlink\" title=\"建立虚拟用户个人配置文件\"></a>建立虚拟用户个人配置文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mkdir /etc/vsftpd/vconf</div><div class=\"line\">$ <span class=\"built_in\">cd</span> /etc/vsftpd/vconf</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#这里建立两个虚拟用户配合文件</span></div><div class=\"line\">$ touch adger</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#建立用户根目录</span></div><div class=\"line\">$ mkdir -p /home/vsftpd/adger/</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#编辑chris用户配置文件，内容如下，其他用户类似</span></div><div class=\"line\">$ vi adger</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># adger目录不允许可写，不然无法连接ftp</span></div><div class=\"line\">local_root=/home/vsftpd/adger/</div><div class=\"line\">write_enable=YES</div><div class=\"line\">anon_world_readable_only=NO</div><div class=\"line\">anon_upload_enable=YES</div><div class=\"line\">anon_mkdir_write_enable=YES</div><div class=\"line\">anon_other_write_enable=YES</div></pre></td></tr></table></figure>\n<h3 id=\"设置目录权限\"><a href=\"#设置目录权限\" class=\"headerlink\" title=\"设置目录权限\"></a>设置目录权限</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># chroot_local_user 属性以后,必须保证ftp根目录不可写,这样对于ftp根直接为网站根目录的用户不方便,所以建议假如ftp根目录是/home/$&#123;adger&#125;,则将访问权限改写如下</span></div><div class=\"line\">$ chmod a-w /home/adger</div><div class=\"line\"><span class=\"comment\"># 新建上传文件夹</span></div><div class=\"line\">$ mkdir /home/vsftpd/adger/resource</div><div class=\"line\">$ chmod -R 777 /home/vsftpd/adger/resource</div></pre></td></tr></table></figure>\n<h3 id=\"防火墙设置\"><a href=\"#防火墙设置\" class=\"headerlink\" title=\"防火墙设置\"></a>防火墙设置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vi /etc/sysconfig/iptables</div><div class=\"line\"><span class=\"comment\">#编辑iptables文件，添加如下内容，开启21端口</span></div><div class=\"line\">-A INPUT -m state --state NEW -m tcp -p tcp --dport 21 -j ACCEPT</div></pre></td></tr></table></figure>\n<h3 id=\"重启vsftpd服务器\"><a href=\"#重启vsftpd服务器\" class=\"headerlink\" title=\"重启vsftpd服务器\"></a>重启vsftpd服务器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ service vsftpd restart</div></pre></td></tr></table></figure>\n<h3 id=\"客户端连接\"><a href=\"#客户端连接\" class=\"headerlink\" title=\"客户端连接\"></a>客户端连接</h3>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装vsftpd\"><a href=\"#安装vsftpd\" class=\"headerlink\" title=\"安装vsftpd\"></a>安装vsftpd</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#安装vsftpd</span></div><div class=\"line\">$ yum install -y vsftpd</div><div class=\"line\"><span class=\"comment\">#设置开机启动</span></div><div class=\"line\">$ systemctl <span class=\"built_in\">enable</span> vsftpd.service </div><div class=\"line\"><span class=\"comment\"># 重启</span></div><div class=\"line\">$ service vsftpd restart</div><div class=\"line\"><span class=\"comment\"># 查看vsftpd服务的状态</span></div><div class=\"line\">$ systemctl status vsftpd.service</div></pre></td></tr></table></figure>\n<h3 id=\"配置vsftpd-conf\"><a href=\"#配置vsftpd-conf\" class=\"headerlink\" title=\"配置vsftpd.conf\"></a>配置vsftpd.conf</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#备份配置文件 </span></div><div class=\"line\">$ cp /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.bak</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#执行以下命令</span></div><div class=\"line\">$ sed -i <span class=\"string\">\"s/anonymous_enable=YES/anonymous_enable=NO/g\"</span> <span class=\"string\">'/etc/vsftpd/vsftpd.conf'</span></div><div class=\"line\"></div><div class=\"line\">$ sed -i <span class=\"string\">\"s/#anon_upload_enable=YES/anon_upload_enable=NO/g\"</span> <span class=\"string\">'/etc/vsftpd/vsftpd.conf'</span></div><div class=\"line\"></div><div class=\"line\">$ sed -i <span class=\"string\">\"s/#anon_mkdir_write_enable=YES/anon_mkdir_write_enable=YES/g\"</span> <span class=\"string\">'/etc/vsftpd/vsftpd.conf'</span></div><div class=\"line\"></div><div class=\"line\">$ sed -i <span class=\"string\">\"s/#chown_uploads=YES/chown_uploads=NO/g\"</span> <span class=\"string\">'/etc/vsftpd/vsftpd.conf'</span></div><div class=\"line\"></div><div class=\"line\">$ sed -i <span class=\"string\">\"s/#async_abor_enable=YES/async_abor_enable=YES/g\"</span> <span class=\"string\">'/etc/vsftpd/vsftpd.conf'</span></div><div class=\"line\"></div><div class=\"line\">$ sed -i <span class=\"string\">\"s/#ascii_upload_enable=YES/ascii_upload_enable=YES/g\"</span> <span class=\"string\">'/etc/vsftpd/vsftpd.conf'</span></div><div class=\"line\"></div><div class=\"line\">$ sed -i <span class=\"string\">\"s/#ascii_download_enable=YES/ascii_download_enable=YES/g\"</span> <span class=\"string\">'/etc/vsftpd/vsftpd.conf'</span></div><div class=\"line\"></div><div class=\"line\">$ sed -i <span class=\"string\">\"s/#ftpd_banner=Welcome to blah FTP service./ftpd_banner=Welcome to FTP service./g\"</span> <span class=\"string\">'/etc/vsftpd/vsftpd.conf'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#添加下列内容到vsftpd.conf末尾（原本有几个配置的最下面）</span></div><div class=\"line\">use_localtime=YES</div><div class=\"line\">listen_port=21</div><div class=\"line\">chroot_local_user=YES</div><div class=\"line\">idle_session_timeout=300</div><div class=\"line\">guest_enable=YES</div><div class=\"line\">guest_username=vsftpd</div><div class=\"line\">user_config_dir=/etc/vsftpd/vconf</div><div class=\"line\">data_connection_timeout=1</div><div class=\"line\">virtual_use_local_privs=YES</div><div class=\"line\">pasv_min_port=10060</div><div class=\"line\">pasv_max_port=10090</div><div class=\"line\">accept_timeout=5</div><div class=\"line\">connect_timeout=1</div></pre></td></tr></table></figure>\n<h3 id=\"建立用户文件\"><a href=\"#建立用户文件\" class=\"headerlink\" title=\"建立用户文件\"></a>建立用户文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#第一行用户名，第二行密码，不能使用root为用户名</span></div><div class=\"line\">$ vi /etc/vsftpd/virtusers</div><div class=\"line\">adger</div><div class=\"line\">123456</div></pre></td></tr></table></figure>\n<h3 id=\"生成用户数据文件\"><a href=\"#生成用户数据文件\" class=\"headerlink\" title=\"生成用户数据文件\"></a>生成用户数据文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ db_load -T -t <span class=\"built_in\">hash</span> -f /etc/vsftpd/virtusers /etc/vsftpd/virtusers.db</div><div class=\"line\"><span class=\"comment\">#设定PAM验证文件，并指定对虚拟用户数据库文件进行读取</span></div><div class=\"line\">$ chmod 600 /etc/vsftpd/virtusers.db</div></pre></td></tr></table></figure>\n<h3 id=\"修改-etc-pam-d-vsftpd文件\"><a href=\"#修改-etc-pam-d-vsftpd文件\" class=\"headerlink\" title=\"修改/etc/pam.d/vsftpd文件\"></a>修改/etc/pam.d/vsftpd文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 修改前先备份 </span></div><div class=\"line\"></div><div class=\"line\">$ cp /etc/pam.d/vsftpd /etc/pam.d/vsftpd.bak</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 将auth及account的所有配置行均注释掉</span></div><div class=\"line\">$ vi /etc/pam.d/vsftpd</div><div class=\"line\"></div><div class=\"line\">auth sufficient /lib64/security/pam_userdb.so db=/etc/vsftpd/virtusers</div><div class=\"line\"></div><div class=\"line\">account sufficient /lib64/security/pam_userdb.so db=/etc/vsftpd/virtusers</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 如果系统为32位，上面改为lib</span></div></pre></td></tr></table></figure>\n<h3 id=\"新建系统用户vsftpd，用户目录为-home-vsftpd\"><a href=\"#新建系统用户vsftpd，用户目录为-home-vsftpd\" class=\"headerlink\" title=\"新建系统用户vsftpd，用户目录为/home/vsftpd\"></a>新建系统用户vsftpd，用户目录为/home/vsftpd</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#用户登录终端设为/bin/false(即：使之不能登录系统)</span></div><div class=\"line\">$ useradd vsftpd -d /home/vsftpd -s /bin/<span class=\"literal\">false</span></div><div class=\"line\">$ chown -R vsftpd:vsftpd /home/vsftpd</div></pre></td></tr></table></figure>\n<h3 id=\"建立虚拟用户个人配置文件\"><a href=\"#建立虚拟用户个人配置文件\" class=\"headerlink\" title=\"建立虚拟用户个人配置文件\"></a>建立虚拟用户个人配置文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mkdir /etc/vsftpd/vconf</div><div class=\"line\">$ <span class=\"built_in\">cd</span> /etc/vsftpd/vconf</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#这里建立两个虚拟用户配合文件</span></div><div class=\"line\">$ touch adger</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#建立用户根目录</span></div><div class=\"line\">$ mkdir -p /home/vsftpd/adger/</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#编辑chris用户配置文件，内容如下，其他用户类似</span></div><div class=\"line\">$ vi adger</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># adger目录不允许可写，不然无法连接ftp</span></div><div class=\"line\">local_root=/home/vsftpd/adger/</div><div class=\"line\">write_enable=YES</div><div class=\"line\">anon_world_readable_only=NO</div><div class=\"line\">anon_upload_enable=YES</div><div class=\"line\">anon_mkdir_write_enable=YES</div><div class=\"line\">anon_other_write_enable=YES</div></pre></td></tr></table></figure>\n<h3 id=\"设置目录权限\"><a href=\"#设置目录权限\" class=\"headerlink\" title=\"设置目录权限\"></a>设置目录权限</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># chroot_local_user 属性以后,必须保证ftp根目录不可写,这样对于ftp根直接为网站根目录的用户不方便,所以建议假如ftp根目录是/home/$&#123;adger&#125;,则将访问权限改写如下</span></div><div class=\"line\">$ chmod a-w /home/adger</div><div class=\"line\"><span class=\"comment\"># 新建上传文件夹</span></div><div class=\"line\">$ mkdir /home/vsftpd/adger/resource</div><div class=\"line\">$ chmod -R 777 /home/vsftpd/adger/resource</div></pre></td></tr></table></figure>\n<h3 id=\"防火墙设置\"><a href=\"#防火墙设置\" class=\"headerlink\" title=\"防火墙设置\"></a>防火墙设置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vi /etc/sysconfig/iptables</div><div class=\"line\"><span class=\"comment\">#编辑iptables文件，添加如下内容，开启21端口</span></div><div class=\"line\">-A INPUT -m state --state NEW -m tcp -p tcp --dport 21 -j ACCEPT</div></pre></td></tr></table></figure>\n<h3 id=\"重启vsftpd服务器\"><a href=\"#重启vsftpd服务器\" class=\"headerlink\" title=\"重启vsftpd服务器\"></a>重启vsftpd服务器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ service vsftpd restart</div></pre></td></tr></table></figure>\n<h3 id=\"客户端连接\"><a href=\"#客户端连接\" class=\"headerlink\" title=\"客户端连接\"></a>客户端连接</h3>"},{"title":"GIT协同开发","date":"2017-08-20T03:46:07.000Z","description":"用了一段时间github,一直想用时间来对git的使用来做一段笔记，前段时间比较忙，现在沉下心来学习也是极好的。","_content":"\n\n##### 用了一段时间github,一直想用时间来对git的使用来做一段笔记，前段时间比较忙，现在沉下心来学习也是极好的。\n很多项目开发会采用git这一优秀的分布式版本管理工具来进行项目版本管理。因为git的使用非常灵活，所以在实际操作中会有许多不同的工作流程。不同团队对于不同项目会有不同的协作方式。掌握git版本管理开发，对以后的学习和开发都有很多好处。\n\n##### 首先基本名词要懂：\n\n> 仓库（Repository）、分支（branch）、工作流（workflow）\n\n##### 仓库（Repository）\n\n在项目的开始到结束，我们会有两种仓库，一种是源仓库（origin），一种是开发者仓库。\n\n###### 源仓库（origin）的有两个作用：\n\n- 汇总参与该项目的各个开发者的代码\n- 存放趋于稳定和可发布的代码\n\n> 源仓库应该是受保护的，开发者不应该直接对其进行开发工作。只有项目管理者（通常是项目发起人）能对其进行较高权限的操作。\n\n###### 开发者仓库：\n> 任何开发者都不会对源仓库进行直接的操作，源仓库建立以后，每个开发者需要做的事情就是把源仓库的“复制”一份，作为自己日常开发的仓库。这个复制，也就是github上面的fork。\n\n> 每个开发者所fork的仓库是完全独立的，互不干扰，甚至与源仓库都无关。  每个开发者仓库相当于一个源仓库实体的影像，  开发者在这个影像中进行编码， 提交到自己的仓库中，这样就可以轻易地实现团队成员之间的并行开发工作。  而开发工作完成以后,   开发者可以向源仓库发送pull request，请求管理员把自己的代码合并到源仓库中，这样就实现了分布式开发工作，和最后的集中式的管理。\n\n \n\n##### 分支（branch） \n\n在git中，分支操作则是每个开发人员日常工作流。利用git的分支，可以非常方便地进行开发和测试。\n\n我们为git定下一种分支模型，在这种模型中，分支有两类，五种：\n\n######  永久性分支\n\n- master branch：主分支\n\n- develop branch：开发分支\n\n###### 临时性分支\n\n- feature branch：功能分支\n\n- release branch：预发布分支\n\n- hotfix branch：bug修复分支\n\n> master：主分支从项目一开始便存在，它用于存放经过测试，已经完全稳定代码；在项目开发以后的任何时刻当中，master存放的代码应该是可作为产品供用户使用的代码。每一次master更新的时候都应该用git打上tag，说明你的产品有新版本发布了。\n\n> develop：开发分支，一开始从master分支中分离出来，用于开发者存放基本稳定代码。开发者把功能做好以后，是存放到自己的develop中，当测试完以后，可以向管理者发起一个pull request，请求把自己仓库的develop分支合并到源仓库的develop中。\n\n> 归纳：所有开发者开发好的功能会在源仓库的develop分支中进行汇总，当develop中的代码经过不断的测试，已经逐渐趋于稳定了，接近产品目标了。这时候，我们就可以把develop分支合并到master分支中，发布一个新版本。\n\n\n> feature：功能性分支，是用于开发项目的功能的分支，是开发者主要战斗阵地。开发者在本地仓库从develop分支分出功能分支，在该分支上进行功能的开发，开发完成以后再合并到develop分支上，这时候功能性分支已经完成任务，可以删除。功能性分支的命名一般为feature-*，*为需要开发的功能的名称。\n\n> release：预发布分支，当产品即将发布的时候，要进行最后的调整和测试，这时候就可以分出一个预发布分支，进行最后的bug fix。测试完全以后，发布新版本，就可以把预发布分支删除。预发布分支一般命名为release-*。\n\n> hotfix：修复bug分支，当产品已经发布了，突然出现了重大的bug。这时候就要新建一个hotfix分支，继续紧急的bug修复工作，当bug修复完以后，把该分支合并到master和develop以后，就可以把该分支删除。修复bug分支命名一般为hotfix-*。\n\n \n\n> 示范：举一个例子，A正在做一个团队项目，已经把源仓库fork了，并且clone到了本地。现在要开发网站的某个功能。A在本地仓库中可以这样做：\n\n##### 切换到develop分支 ：``` git checkout develop```\n\n##### 分出一个功能性分支： ```git checkout -b feature-discuss```\n\n在功能性分支上进行开发工作，多次commit，测试以后...\n\n##### 把做好的功能合并到develop中：\n\n```\ngit checkout develop    # 回到develop分支    \n\ngit merge--no-ff feature-discuss# 把做好的功能合并到develop中    \n\ngit branch -d feature-discuss    # 删除功能性分支    \n\ngit push origin develop    # 把develop提交到自己的远程仓库中\n```\n\n \n\n##### 工作流（workflow）\n\n- 源仓库的构建，创建一个项目，初始化了两个永久性分支master和develop.\n\n- 开发者fork源仓库\n\n- 把自己开发者仓库clone到本地，命令：git clone\n\n- 构建功能分支进行开发，完成后合并到自己的develop分支。\n\n##### 进入仓库中，按照前面说所的构建功能分支的步骤，构建功能分支进行开发、合并，假设我现在要开发一个“讨论”功能：\n```\ngit checkout develop    # 切换到`develop`分支   \n\n git checkout -b feature-discuss    # 分出一个功能性分支    \n\ntouch discuss.js    # 假装discuss.js就是我们要开发的功能    \n\ngit add .    \n\ngit commit -m 'finish discuss feature'# 提交更改    \n\ngit checkout develop    # 回到develop分支    \n\ngit merge--no-ff feature-discuss# 把做好的功能合并到develop中    \n\ngit branch -d feature-discuss    # 删除功能性分支    \n\ngit push origin develop    # 把develop提交到自己的远程仓库中\n```\n\n - 向管理员提交pull request。经过测试以后，觉得没问题，就可以请求管理员把自己仓库的develop分支合并到源仓库的develop分支中，这就是传说中的pull request。\n\n##### 管理员测试、合并\n\n对代码进行review，github提供非常强大的代码review功能\n\n在本地测试新建一个测试分支，测试pull request的代码\n```\ngit checkout develop    # 进入本地的develop分支    \n\ngit checkout -b livoras-develop    \n```\n\n##### 从develop分支中分出一个叫livoras-develop的测试分支测试pull request代码    \n\ngit pull https://github.com/livoras/git-demo.git develop    \n\n##### 把pull request的代码pull到测试分支中，进行测试\n\n##### 判断是否同意合并到源仓库的develop中，如果经过测试没问题，可以把我的代码合并到源仓库的develop中：\n```\ngit checkout develop    \n\ngit merge--no-ff livoras-develop    \n\ngit push origin develop\n```","source":"_posts/GIT协同开发.md","raw":"---\ntitle: GIT协同开发\ndate: 2017-08-20 11:46:07\ntags: github\ndescription: 用了一段时间github,一直想用时间来对git的使用来做一段笔记，前段时间比较忙，现在沉下心来学习也是极好的。\n---\n\n\n##### 用了一段时间github,一直想用时间来对git的使用来做一段笔记，前段时间比较忙，现在沉下心来学习也是极好的。\n很多项目开发会采用git这一优秀的分布式版本管理工具来进行项目版本管理。因为git的使用非常灵活，所以在实际操作中会有许多不同的工作流程。不同团队对于不同项目会有不同的协作方式。掌握git版本管理开发，对以后的学习和开发都有很多好处。\n\n##### 首先基本名词要懂：\n\n> 仓库（Repository）、分支（branch）、工作流（workflow）\n\n##### 仓库（Repository）\n\n在项目的开始到结束，我们会有两种仓库，一种是源仓库（origin），一种是开发者仓库。\n\n###### 源仓库（origin）的有两个作用：\n\n- 汇总参与该项目的各个开发者的代码\n- 存放趋于稳定和可发布的代码\n\n> 源仓库应该是受保护的，开发者不应该直接对其进行开发工作。只有项目管理者（通常是项目发起人）能对其进行较高权限的操作。\n\n###### 开发者仓库：\n> 任何开发者都不会对源仓库进行直接的操作，源仓库建立以后，每个开发者需要做的事情就是把源仓库的“复制”一份，作为自己日常开发的仓库。这个复制，也就是github上面的fork。\n\n> 每个开发者所fork的仓库是完全独立的，互不干扰，甚至与源仓库都无关。  每个开发者仓库相当于一个源仓库实体的影像，  开发者在这个影像中进行编码， 提交到自己的仓库中，这样就可以轻易地实现团队成员之间的并行开发工作。  而开发工作完成以后,   开发者可以向源仓库发送pull request，请求管理员把自己的代码合并到源仓库中，这样就实现了分布式开发工作，和最后的集中式的管理。\n\n \n\n##### 分支（branch） \n\n在git中，分支操作则是每个开发人员日常工作流。利用git的分支，可以非常方便地进行开发和测试。\n\n我们为git定下一种分支模型，在这种模型中，分支有两类，五种：\n\n######  永久性分支\n\n- master branch：主分支\n\n- develop branch：开发分支\n\n###### 临时性分支\n\n- feature branch：功能分支\n\n- release branch：预发布分支\n\n- hotfix branch：bug修复分支\n\n> master：主分支从项目一开始便存在，它用于存放经过测试，已经完全稳定代码；在项目开发以后的任何时刻当中，master存放的代码应该是可作为产品供用户使用的代码。每一次master更新的时候都应该用git打上tag，说明你的产品有新版本发布了。\n\n> develop：开发分支，一开始从master分支中分离出来，用于开发者存放基本稳定代码。开发者把功能做好以后，是存放到自己的develop中，当测试完以后，可以向管理者发起一个pull request，请求把自己仓库的develop分支合并到源仓库的develop中。\n\n> 归纳：所有开发者开发好的功能会在源仓库的develop分支中进行汇总，当develop中的代码经过不断的测试，已经逐渐趋于稳定了，接近产品目标了。这时候，我们就可以把develop分支合并到master分支中，发布一个新版本。\n\n\n> feature：功能性分支，是用于开发项目的功能的分支，是开发者主要战斗阵地。开发者在本地仓库从develop分支分出功能分支，在该分支上进行功能的开发，开发完成以后再合并到develop分支上，这时候功能性分支已经完成任务，可以删除。功能性分支的命名一般为feature-*，*为需要开发的功能的名称。\n\n> release：预发布分支，当产品即将发布的时候，要进行最后的调整和测试，这时候就可以分出一个预发布分支，进行最后的bug fix。测试完全以后，发布新版本，就可以把预发布分支删除。预发布分支一般命名为release-*。\n\n> hotfix：修复bug分支，当产品已经发布了，突然出现了重大的bug。这时候就要新建一个hotfix分支，继续紧急的bug修复工作，当bug修复完以后，把该分支合并到master和develop以后，就可以把该分支删除。修复bug分支命名一般为hotfix-*。\n\n \n\n> 示范：举一个例子，A正在做一个团队项目，已经把源仓库fork了，并且clone到了本地。现在要开发网站的某个功能。A在本地仓库中可以这样做：\n\n##### 切换到develop分支 ：``` git checkout develop```\n\n##### 分出一个功能性分支： ```git checkout -b feature-discuss```\n\n在功能性分支上进行开发工作，多次commit，测试以后...\n\n##### 把做好的功能合并到develop中：\n\n```\ngit checkout develop    # 回到develop分支    \n\ngit merge--no-ff feature-discuss# 把做好的功能合并到develop中    \n\ngit branch -d feature-discuss    # 删除功能性分支    \n\ngit push origin develop    # 把develop提交到自己的远程仓库中\n```\n\n \n\n##### 工作流（workflow）\n\n- 源仓库的构建，创建一个项目，初始化了两个永久性分支master和develop.\n\n- 开发者fork源仓库\n\n- 把自己开发者仓库clone到本地，命令：git clone\n\n- 构建功能分支进行开发，完成后合并到自己的develop分支。\n\n##### 进入仓库中，按照前面说所的构建功能分支的步骤，构建功能分支进行开发、合并，假设我现在要开发一个“讨论”功能：\n```\ngit checkout develop    # 切换到`develop`分支   \n\n git checkout -b feature-discuss    # 分出一个功能性分支    \n\ntouch discuss.js    # 假装discuss.js就是我们要开发的功能    \n\ngit add .    \n\ngit commit -m 'finish discuss feature'# 提交更改    \n\ngit checkout develop    # 回到develop分支    \n\ngit merge--no-ff feature-discuss# 把做好的功能合并到develop中    \n\ngit branch -d feature-discuss    # 删除功能性分支    \n\ngit push origin develop    # 把develop提交到自己的远程仓库中\n```\n\n - 向管理员提交pull request。经过测试以后，觉得没问题，就可以请求管理员把自己仓库的develop分支合并到源仓库的develop分支中，这就是传说中的pull request。\n\n##### 管理员测试、合并\n\n对代码进行review，github提供非常强大的代码review功能\n\n在本地测试新建一个测试分支，测试pull request的代码\n```\ngit checkout develop    # 进入本地的develop分支    \n\ngit checkout -b livoras-develop    \n```\n\n##### 从develop分支中分出一个叫livoras-develop的测试分支测试pull request代码    \n\ngit pull https://github.com/livoras/git-demo.git develop    \n\n##### 把pull request的代码pull到测试分支中，进行测试\n\n##### 判断是否同意合并到源仓库的develop中，如果经过测试没问题，可以把我的代码合并到源仓库的develop中：\n```\ngit checkout develop    \n\ngit merge--no-ff livoras-develop    \n\ngit push origin develop\n```","slug":"GIT协同开发","published":1,"updated":"2017-08-22T03:55:16.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9p1buhe0002not0brczi3s2","content":"<h5 id=\"用了一段时间github-一直想用时间来对git的使用来做一段笔记，前段时间比较忙，现在沉下心来学习也是极好的。\"><a href=\"#用了一段时间github-一直想用时间来对git的使用来做一段笔记，前段时间比较忙，现在沉下心来学习也是极好的。\" class=\"headerlink\" title=\"用了一段时间github,一直想用时间来对git的使用来做一段笔记，前段时间比较忙，现在沉下心来学习也是极好的。\"></a>用了一段时间github,一直想用时间来对git的使用来做一段笔记，前段时间比较忙，现在沉下心来学习也是极好的。</h5><p>很多项目开发会采用git这一优秀的分布式版本管理工具来进行项目版本管理。因为git的使用非常灵活，所以在实际操作中会有许多不同的工作流程。不同团队对于不同项目会有不同的协作方式。掌握git版本管理开发，对以后的学习和开发都有很多好处。</p>\n<h5 id=\"首先基本名词要懂：\"><a href=\"#首先基本名词要懂：\" class=\"headerlink\" title=\"首先基本名词要懂：\"></a>首先基本名词要懂：</h5><blockquote>\n<p>仓库（Repository）、分支（branch）、工作流（workflow）</p>\n</blockquote>\n<h5 id=\"仓库（Repository）\"><a href=\"#仓库（Repository）\" class=\"headerlink\" title=\"仓库（Repository）\"></a>仓库（Repository）</h5><p>在项目的开始到结束，我们会有两种仓库，一种是源仓库（origin），一种是开发者仓库。</p>\n<h6 id=\"源仓库（origin）的有两个作用：\"><a href=\"#源仓库（origin）的有两个作用：\" class=\"headerlink\" title=\"源仓库（origin）的有两个作用：\"></a>源仓库（origin）的有两个作用：</h6><ul>\n<li>汇总参与该项目的各个开发者的代码</li>\n<li>存放趋于稳定和可发布的代码</li>\n</ul>\n<blockquote>\n<p>源仓库应该是受保护的，开发者不应该直接对其进行开发工作。只有项目管理者（通常是项目发起人）能对其进行较高权限的操作。</p>\n</blockquote>\n<h6 id=\"开发者仓库：\"><a href=\"#开发者仓库：\" class=\"headerlink\" title=\"开发者仓库：\"></a>开发者仓库：</h6><blockquote>\n<p>任何开发者都不会对源仓库进行直接的操作，源仓库建立以后，每个开发者需要做的事情就是把源仓库的“复制”一份，作为自己日常开发的仓库。这个复制，也就是github上面的fork。</p>\n<p>每个开发者所fork的仓库是完全独立的，互不干扰，甚至与源仓库都无关。  每个开发者仓库相当于一个源仓库实体的影像，  开发者在这个影像中进行编码， 提交到自己的仓库中，这样就可以轻易地实现团队成员之间的并行开发工作。  而开发工作完成以后,   开发者可以向源仓库发送pull request，请求管理员把自己的代码合并到源仓库中，这样就实现了分布式开发工作，和最后的集中式的管理。</p>\n</blockquote>\n<h5 id=\"分支（branch）\"><a href=\"#分支（branch）\" class=\"headerlink\" title=\"分支（branch）\"></a>分支（branch）</h5><p>在git中，分支操作则是每个开发人员日常工作流。利用git的分支，可以非常方便地进行开发和测试。</p>\n<p>我们为git定下一种分支模型，在这种模型中，分支有两类，五种：</p>\n<h6 id=\"永久性分支\"><a href=\"#永久性分支\" class=\"headerlink\" title=\"永久性分支\"></a>永久性分支</h6><ul>\n<li><p>master branch：主分支</p>\n</li>\n<li><p>develop branch：开发分支</p>\n</li>\n</ul>\n<h6 id=\"临时性分支\"><a href=\"#临时性分支\" class=\"headerlink\" title=\"临时性分支\"></a>临时性分支</h6><ul>\n<li><p>feature branch：功能分支</p>\n</li>\n<li><p>release branch：预发布分支</p>\n</li>\n<li><p>hotfix branch：bug修复分支</p>\n</li>\n</ul>\n<blockquote>\n<p>master：主分支从项目一开始便存在，它用于存放经过测试，已经完全稳定代码；在项目开发以后的任何时刻当中，master存放的代码应该是可作为产品供用户使用的代码。每一次master更新的时候都应该用git打上tag，说明你的产品有新版本发布了。</p>\n<p>develop：开发分支，一开始从master分支中分离出来，用于开发者存放基本稳定代码。开发者把功能做好以后，是存放到自己的develop中，当测试完以后，可以向管理者发起一个pull request，请求把自己仓库的develop分支合并到源仓库的develop中。</p>\n<p>归纳：所有开发者开发好的功能会在源仓库的develop分支中进行汇总，当develop中的代码经过不断的测试，已经逐渐趋于稳定了，接近产品目标了。这时候，我们就可以把develop分支合并到master分支中，发布一个新版本。</p>\n<p>feature：功能性分支，是用于开发项目的功能的分支，是开发者主要战斗阵地。开发者在本地仓库从develop分支分出功能分支，在该分支上进行功能的开发，开发完成以后再合并到develop分支上，这时候功能性分支已经完成任务，可以删除。功能性分支的命名一般为feature-<em>，</em>为需要开发的功能的名称。</p>\n<p>release：预发布分支，当产品即将发布的时候，要进行最后的调整和测试，这时候就可以分出一个预发布分支，进行最后的bug fix。测试完全以后，发布新版本，就可以把预发布分支删除。预发布分支一般命名为release-*。</p>\n<p>hotfix：修复bug分支，当产品已经发布了，突然出现了重大的bug。这时候就要新建一个hotfix分支，继续紧急的bug修复工作，当bug修复完以后，把该分支合并到master和develop以后，就可以把该分支删除。修复bug分支命名一般为hotfix-*。</p>\n<p>示范：举一个例子，A正在做一个团队项目，已经把源仓库fork了，并且clone到了本地。现在要开发网站的某个功能。A在本地仓库中可以这样做：</p>\n</blockquote>\n<h5 id=\"切换到develop分支-：\"><a href=\"#切换到develop分支-：\" class=\"headerlink\" title=\"切换到develop分支 ：\"></a>切换到develop分支 ：<figure class=\"highlight plain\"><figcaption><span>checkout develop```</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">##### 分出一个功能性分支： ```git checkout -b feature-discuss</div></pre></td></tr></table></figure></h5><p>在功能性分支上进行开发工作，多次commit，测试以后…</p>\n<h5 id=\"把做好的功能合并到develop中：\"><a href=\"#把做好的功能合并到develop中：\" class=\"headerlink\" title=\"把做好的功能合并到develop中：\"></a>把做好的功能合并到develop中：</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout develop    # 回到develop分支    </div><div class=\"line\"></div><div class=\"line\">git merge--no-ff feature-discuss# 把做好的功能合并到develop中    </div><div class=\"line\"></div><div class=\"line\">git branch -d feature-discuss    # 删除功能性分支    </div><div class=\"line\"></div><div class=\"line\">git push origin develop    # 把develop提交到自己的远程仓库中</div></pre></td></tr></table></figure>\n<h5 id=\"工作流（workflow）\"><a href=\"#工作流（workflow）\" class=\"headerlink\" title=\"工作流（workflow）\"></a>工作流（workflow）</h5><ul>\n<li><p>源仓库的构建，创建一个项目，初始化了两个永久性分支master和develop.</p>\n</li>\n<li><p>开发者fork源仓库</p>\n</li>\n<li><p>把自己开发者仓库clone到本地，命令：git clone</p>\n</li>\n<li><p>构建功能分支进行开发，完成后合并到自己的develop分支。</p>\n</li>\n</ul>\n<h5 id=\"进入仓库中，按照前面说所的构建功能分支的步骤，构建功能分支进行开发、合并，假设我现在要开发一个“讨论”功能：\"><a href=\"#进入仓库中，按照前面说所的构建功能分支的步骤，构建功能分支进行开发、合并，假设我现在要开发一个“讨论”功能：\" class=\"headerlink\" title=\"进入仓库中，按照前面说所的构建功能分支的步骤，构建功能分支进行开发、合并，假设我现在要开发一个“讨论”功能：\"></a>进入仓库中，按照前面说所的构建功能分支的步骤，构建功能分支进行开发、合并，假设我现在要开发一个“讨论”功能：</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout develop    # 切换到`develop`分支   </div><div class=\"line\"></div><div class=\"line\"> git checkout -b feature-discuss    # 分出一个功能性分支    </div><div class=\"line\"></div><div class=\"line\">touch discuss.js    # 假装discuss.js就是我们要开发的功能    </div><div class=\"line\"></div><div class=\"line\">git add .    </div><div class=\"line\"></div><div class=\"line\">git commit -m &apos;finish discuss feature&apos;# 提交更改    </div><div class=\"line\"></div><div class=\"line\">git checkout develop    # 回到develop分支    </div><div class=\"line\"></div><div class=\"line\">git merge--no-ff feature-discuss# 把做好的功能合并到develop中    </div><div class=\"line\"></div><div class=\"line\">git branch -d feature-discuss    # 删除功能性分支    </div><div class=\"line\"></div><div class=\"line\">git push origin develop    # 把develop提交到自己的远程仓库中</div></pre></td></tr></table></figure>\n<ul>\n<li>向管理员提交pull request。经过测试以后，觉得没问题，就可以请求管理员把自己仓库的develop分支合并到源仓库的develop分支中，这就是传说中的pull request。</li>\n</ul>\n<h5 id=\"管理员测试、合并\"><a href=\"#管理员测试、合并\" class=\"headerlink\" title=\"管理员测试、合并\"></a>管理员测试、合并</h5><p>对代码进行review，github提供非常强大的代码review功能</p>\n<p>在本地测试新建一个测试分支，测试pull request的代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout develop    # 进入本地的develop分支    </div><div class=\"line\"></div><div class=\"line\">git checkout -b livoras-develop</div></pre></td></tr></table></figure></p>\n<h5 id=\"从develop分支中分出一个叫livoras-develop的测试分支测试pull-request代码\"><a href=\"#从develop分支中分出一个叫livoras-develop的测试分支测试pull-request代码\" class=\"headerlink\" title=\"从develop分支中分出一个叫livoras-develop的测试分支测试pull request代码\"></a>从develop分支中分出一个叫livoras-develop的测试分支测试pull request代码</h5><p>git pull <a href=\"https://github.com/livoras/git-demo.git\" target=\"_blank\" rel=\"external\">https://github.com/livoras/git-demo.git</a> develop    </p>\n<h5 id=\"把pull-request的代码pull到测试分支中，进行测试\"><a href=\"#把pull-request的代码pull到测试分支中，进行测试\" class=\"headerlink\" title=\"把pull request的代码pull到测试分支中，进行测试\"></a>把pull request的代码pull到测试分支中，进行测试</h5><h5 id=\"判断是否同意合并到源仓库的develop中，如果经过测试没问题，可以把我的代码合并到源仓库的develop中：\"><a href=\"#判断是否同意合并到源仓库的develop中，如果经过测试没问题，可以把我的代码合并到源仓库的develop中：\" class=\"headerlink\" title=\"判断是否同意合并到源仓库的develop中，如果经过测试没问题，可以把我的代码合并到源仓库的develop中：\"></a>判断是否同意合并到源仓库的develop中，如果经过测试没问题，可以把我的代码合并到源仓库的develop中：</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout develop    </div><div class=\"line\"></div><div class=\"line\">git merge--no-ff livoras-develop    </div><div class=\"line\"></div><div class=\"line\">git push origin develop</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h5 id=\"用了一段时间github-一直想用时间来对git的使用来做一段笔记，前段时间比较忙，现在沉下心来学习也是极好的。\"><a href=\"#用了一段时间github-一直想用时间来对git的使用来做一段笔记，前段时间比较忙，现在沉下心来学习也是极好的。\" class=\"headerlink\" title=\"用了一段时间github,一直想用时间来对git的使用来做一段笔记，前段时间比较忙，现在沉下心来学习也是极好的。\"></a>用了一段时间github,一直想用时间来对git的使用来做一段笔记，前段时间比较忙，现在沉下心来学习也是极好的。</h5><p>很多项目开发会采用git这一优秀的分布式版本管理工具来进行项目版本管理。因为git的使用非常灵活，所以在实际操作中会有许多不同的工作流程。不同团队对于不同项目会有不同的协作方式。掌握git版本管理开发，对以后的学习和开发都有很多好处。</p>\n<h5 id=\"首先基本名词要懂：\"><a href=\"#首先基本名词要懂：\" class=\"headerlink\" title=\"首先基本名词要懂：\"></a>首先基本名词要懂：</h5><blockquote>\n<p>仓库（Repository）、分支（branch）、工作流（workflow）</p>\n</blockquote>\n<h5 id=\"仓库（Repository）\"><a href=\"#仓库（Repository）\" class=\"headerlink\" title=\"仓库（Repository）\"></a>仓库（Repository）</h5><p>在项目的开始到结束，我们会有两种仓库，一种是源仓库（origin），一种是开发者仓库。</p>\n<h6 id=\"源仓库（origin）的有两个作用：\"><a href=\"#源仓库（origin）的有两个作用：\" class=\"headerlink\" title=\"源仓库（origin）的有两个作用：\"></a>源仓库（origin）的有两个作用：</h6><ul>\n<li>汇总参与该项目的各个开发者的代码</li>\n<li>存放趋于稳定和可发布的代码</li>\n</ul>\n<blockquote>\n<p>源仓库应该是受保护的，开发者不应该直接对其进行开发工作。只有项目管理者（通常是项目发起人）能对其进行较高权限的操作。</p>\n</blockquote>\n<h6 id=\"开发者仓库：\"><a href=\"#开发者仓库：\" class=\"headerlink\" title=\"开发者仓库：\"></a>开发者仓库：</h6><blockquote>\n<p>任何开发者都不会对源仓库进行直接的操作，源仓库建立以后，每个开发者需要做的事情就是把源仓库的“复制”一份，作为自己日常开发的仓库。这个复制，也就是github上面的fork。</p>\n<p>每个开发者所fork的仓库是完全独立的，互不干扰，甚至与源仓库都无关。  每个开发者仓库相当于一个源仓库实体的影像，  开发者在这个影像中进行编码， 提交到自己的仓库中，这样就可以轻易地实现团队成员之间的并行开发工作。  而开发工作完成以后,   开发者可以向源仓库发送pull request，请求管理员把自己的代码合并到源仓库中，这样就实现了分布式开发工作，和最后的集中式的管理。</p>\n</blockquote>\n<h5 id=\"分支（branch）\"><a href=\"#分支（branch）\" class=\"headerlink\" title=\"分支（branch）\"></a>分支（branch）</h5><p>在git中，分支操作则是每个开发人员日常工作流。利用git的分支，可以非常方便地进行开发和测试。</p>\n<p>我们为git定下一种分支模型，在这种模型中，分支有两类，五种：</p>\n<h6 id=\"永久性分支\"><a href=\"#永久性分支\" class=\"headerlink\" title=\"永久性分支\"></a>永久性分支</h6><ul>\n<li><p>master branch：主分支</p>\n</li>\n<li><p>develop branch：开发分支</p>\n</li>\n</ul>\n<h6 id=\"临时性分支\"><a href=\"#临时性分支\" class=\"headerlink\" title=\"临时性分支\"></a>临时性分支</h6><ul>\n<li><p>feature branch：功能分支</p>\n</li>\n<li><p>release branch：预发布分支</p>\n</li>\n<li><p>hotfix branch：bug修复分支</p>\n</li>\n</ul>\n<blockquote>\n<p>master：主分支从项目一开始便存在，它用于存放经过测试，已经完全稳定代码；在项目开发以后的任何时刻当中，master存放的代码应该是可作为产品供用户使用的代码。每一次master更新的时候都应该用git打上tag，说明你的产品有新版本发布了。</p>\n<p>develop：开发分支，一开始从master分支中分离出来，用于开发者存放基本稳定代码。开发者把功能做好以后，是存放到自己的develop中，当测试完以后，可以向管理者发起一个pull request，请求把自己仓库的develop分支合并到源仓库的develop中。</p>\n<p>归纳：所有开发者开发好的功能会在源仓库的develop分支中进行汇总，当develop中的代码经过不断的测试，已经逐渐趋于稳定了，接近产品目标了。这时候，我们就可以把develop分支合并到master分支中，发布一个新版本。</p>\n<p>feature：功能性分支，是用于开发项目的功能的分支，是开发者主要战斗阵地。开发者在本地仓库从develop分支分出功能分支，在该分支上进行功能的开发，开发完成以后再合并到develop分支上，这时候功能性分支已经完成任务，可以删除。功能性分支的命名一般为feature-<em>，</em>为需要开发的功能的名称。</p>\n<p>release：预发布分支，当产品即将发布的时候，要进行最后的调整和测试，这时候就可以分出一个预发布分支，进行最后的bug fix。测试完全以后，发布新版本，就可以把预发布分支删除。预发布分支一般命名为release-*。</p>\n<p>hotfix：修复bug分支，当产品已经发布了，突然出现了重大的bug。这时候就要新建一个hotfix分支，继续紧急的bug修复工作，当bug修复完以后，把该分支合并到master和develop以后，就可以把该分支删除。修复bug分支命名一般为hotfix-*。</p>\n<p>示范：举一个例子，A正在做一个团队项目，已经把源仓库fork了，并且clone到了本地。现在要开发网站的某个功能。A在本地仓库中可以这样做：</p>\n</blockquote>\n<h5 id=\"切换到develop分支-：\"><a href=\"#切换到develop分支-：\" class=\"headerlink\" title=\"切换到develop分支 ：\"></a>切换到develop分支 ：<figure class=\"highlight plain\"><figcaption><span>checkout develop```</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">##### 分出一个功能性分支： ```git checkout -b feature-discuss</div></pre></td></tr></table></figure></h5><p>在功能性分支上进行开发工作，多次commit，测试以后…</p>\n<h5 id=\"把做好的功能合并到develop中：\"><a href=\"#把做好的功能合并到develop中：\" class=\"headerlink\" title=\"把做好的功能合并到develop中：\"></a>把做好的功能合并到develop中：</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout develop    # 回到develop分支    </div><div class=\"line\"></div><div class=\"line\">git merge--no-ff feature-discuss# 把做好的功能合并到develop中    </div><div class=\"line\"></div><div class=\"line\">git branch -d feature-discuss    # 删除功能性分支    </div><div class=\"line\"></div><div class=\"line\">git push origin develop    # 把develop提交到自己的远程仓库中</div></pre></td></tr></table></figure>\n<h5 id=\"工作流（workflow）\"><a href=\"#工作流（workflow）\" class=\"headerlink\" title=\"工作流（workflow）\"></a>工作流（workflow）</h5><ul>\n<li><p>源仓库的构建，创建一个项目，初始化了两个永久性分支master和develop.</p>\n</li>\n<li><p>开发者fork源仓库</p>\n</li>\n<li><p>把自己开发者仓库clone到本地，命令：git clone</p>\n</li>\n<li><p>构建功能分支进行开发，完成后合并到自己的develop分支。</p>\n</li>\n</ul>\n<h5 id=\"进入仓库中，按照前面说所的构建功能分支的步骤，构建功能分支进行开发、合并，假设我现在要开发一个“讨论”功能：\"><a href=\"#进入仓库中，按照前面说所的构建功能分支的步骤，构建功能分支进行开发、合并，假设我现在要开发一个“讨论”功能：\" class=\"headerlink\" title=\"进入仓库中，按照前面说所的构建功能分支的步骤，构建功能分支进行开发、合并，假设我现在要开发一个“讨论”功能：\"></a>进入仓库中，按照前面说所的构建功能分支的步骤，构建功能分支进行开发、合并，假设我现在要开发一个“讨论”功能：</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout develop    # 切换到`develop`分支   </div><div class=\"line\"></div><div class=\"line\"> git checkout -b feature-discuss    # 分出一个功能性分支    </div><div class=\"line\"></div><div class=\"line\">touch discuss.js    # 假装discuss.js就是我们要开发的功能    </div><div class=\"line\"></div><div class=\"line\">git add .    </div><div class=\"line\"></div><div class=\"line\">git commit -m &apos;finish discuss feature&apos;# 提交更改    </div><div class=\"line\"></div><div class=\"line\">git checkout develop    # 回到develop分支    </div><div class=\"line\"></div><div class=\"line\">git merge--no-ff feature-discuss# 把做好的功能合并到develop中    </div><div class=\"line\"></div><div class=\"line\">git branch -d feature-discuss    # 删除功能性分支    </div><div class=\"line\"></div><div class=\"line\">git push origin develop    # 把develop提交到自己的远程仓库中</div></pre></td></tr></table></figure>\n<ul>\n<li>向管理员提交pull request。经过测试以后，觉得没问题，就可以请求管理员把自己仓库的develop分支合并到源仓库的develop分支中，这就是传说中的pull request。</li>\n</ul>\n<h5 id=\"管理员测试、合并\"><a href=\"#管理员测试、合并\" class=\"headerlink\" title=\"管理员测试、合并\"></a>管理员测试、合并</h5><p>对代码进行review，github提供非常强大的代码review功能</p>\n<p>在本地测试新建一个测试分支，测试pull request的代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout develop    # 进入本地的develop分支    </div><div class=\"line\"></div><div class=\"line\">git checkout -b livoras-develop</div></pre></td></tr></table></figure></p>\n<h5 id=\"从develop分支中分出一个叫livoras-develop的测试分支测试pull-request代码\"><a href=\"#从develop分支中分出一个叫livoras-develop的测试分支测试pull-request代码\" class=\"headerlink\" title=\"从develop分支中分出一个叫livoras-develop的测试分支测试pull request代码\"></a>从develop分支中分出一个叫livoras-develop的测试分支测试pull request代码</h5><p>git pull <a href=\"https://github.com/livoras/git-demo.git\" target=\"_blank\" rel=\"external\">https://github.com/livoras/git-demo.git</a> develop    </p>\n<h5 id=\"把pull-request的代码pull到测试分支中，进行测试\"><a href=\"#把pull-request的代码pull到测试分支中，进行测试\" class=\"headerlink\" title=\"把pull request的代码pull到测试分支中，进行测试\"></a>把pull request的代码pull到测试分支中，进行测试</h5><h5 id=\"判断是否同意合并到源仓库的develop中，如果经过测试没问题，可以把我的代码合并到源仓库的develop中：\"><a href=\"#判断是否同意合并到源仓库的develop中，如果经过测试没问题，可以把我的代码合并到源仓库的develop中：\" class=\"headerlink\" title=\"判断是否同意合并到源仓库的develop中，如果经过测试没问题，可以把我的代码合并到源仓库的develop中：\"></a>判断是否同意合并到源仓库的develop中，如果经过测试没问题，可以把我的代码合并到源仓库的develop中：</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout develop    </div><div class=\"line\"></div><div class=\"line\">git merge--no-ff livoras-develop    </div><div class=\"line\"></div><div class=\"line\">git push origin develop</div></pre></td></tr></table></figure>"},{"title":"特殊的5天","date":"2017-08-22T03:46:07.000Z","description":"忍别离，不忍却又别离，托鸿雁南去，不知此心何寄","_content":"\n你走已经第三天，但是仿佛并没有走远\n","source":"_posts/特殊的5天.md","raw":"---\ntitle: 特殊的5天\ndate: 2017-08-22 11:46:07\ntags: 旅游\ndescription: 忍别离，不忍却又别离，托鸿雁南去，不知此心何寄\n---\n\n你走已经第三天，但是仿佛并没有走远\n","slug":"特殊的5天","published":1,"updated":"2017-08-25T10:04:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9p1buhh0005not002vymdq4","content":"<p>你走已经第三天，但是仿佛并没有走远</p>\n","site":{"data":{}},"excerpt":"","more":"<p>你走已经第三天，但是仿佛并没有走远</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj9p1buha0000not0a8ztcrxy","tag_id":"cj9p1buhg0004not0smnwdt2x","_id":"cj9p1buhj0007not0lzx4ti5q"},{"post_id":"cj9p1buhe0002not0brczi3s2","tag_id":"cj9p1buhi0006not01x0btix3","_id":"cj9p1buhj0009not0puhq4b2m"},{"post_id":"cj9p1buhh0005not002vymdq4","tag_id":"cj9p1buhj0008not0k2eixac1","_id":"cj9p1buhj000anot0mv1zr54q"}],"Tag":[{"name":"Linux","_id":"cj9p1buhg0004not0smnwdt2x"},{"name":"github","_id":"cj9p1buhi0006not01x0btix3"},{"name":"旅游","_id":"cj9p1buhj0008not0k2eixac1"}]}}